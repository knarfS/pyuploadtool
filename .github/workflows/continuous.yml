name: Continuous release

on: [push, pull_request, workflow_dispatch]

jobs:
  qa:
    name: Quality Assurance
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python3 -m pip install poetry
          python3 -m poetry install
      - name: Check code formatting with black
        run: python3 -m poetry run black --check pyuploadtool/

  build-appimage:
    name: Build AppImage (${{ matrix.target.ARCH }})
    needs:
      - qa
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          #- { ARCH: "i386", build_file: "appimagecraft-i386.yml" }
          - { ARCH: "x86_64", build_file: "appimagecraft.yml" }
    env:
      APPIMAGE_EXTRACT_AND_RUN: 1
      ARCH: ${{ matrix.target.ARCH }}
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get install -y libc6-dev gcc-multilib
      - uses: actions/checkout@v2
      - name: Build AppImage
        run: |
          set -x
          wget https://github.com/TheAssassin/appimagecraft/releases/download/continuous/appimagecraft-${{ matrix.target.ARCH }}.AppImage
          chmod +x appimagecraft-${{ matrix.target.ARCH }}.AppImage
          ./appimagecraft-${{ matrix.target.ARCH }}.AppImage build -f ${{ matrix.target.build_file }}
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: AppImage ${{ matrix.target.ARCH }}
          path: pyuploadtool*.AppImage*

  upload:
    name: Create release and upload artifacts (${{ matrix.ARCH }})
    needs:
      - build-appimage
    runs-on: ubuntu-latest
    strategy:
      matrix:
        #ARCH: ["i386", "x86_64"]
        ARCH: ["x86_64"]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Inspect directory after downloading artifacts
        run: ls -alFR
      - name: Create release and upload artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            cd "AppImage ${{ matrix.ARCH }}"
            chmod +x pyuploadtool-${{ matrix.ARCH }}.AppImage
            ./pyuploadtool-${{ matrix.ARCH }}.AppImage pyuploadtool-${{ matrix.ARCH }}.AppImage
